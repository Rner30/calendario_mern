{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","helpers/prepareEvents.js","actions/events.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchsinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","checkingFinish","login","user","logout","LoginScreen","dispatch","useDispatch","lEmail","lpassword","formLoginValues","handleLoginInputChange","rName","rEmail","rpassword1","rpassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","prepareEventos","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","eventos","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0d4c798.chunk.js","sourcesContent":["\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n\n    eventSetActive: '[event] Set Active',\n    eventAddNew: '[event] Add new',\n    eventStartAddNew: '[event] Start add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoader: '[event] events loader',\n\n\n\n    authChecking: '[auth] Checking login state',\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start Login',\n    authLogin: '[auth] Login',\n    authStateRegister: '[auth] Start register',\n    authStartTokenRenew: '[auth] start token renew',\n    authLogout: '[auth] Logout',\n\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","\nimport { types } from '../types/types';\n// {\n//     id: 'asdasd',\n//     title: 'Cumpleaños del jefe',\n//     start: moment().toDate(),\n//     end: moment().add( 2, 'hours' ).toDate(),\n//     bgcolor: '#fafafa',\n//     notes: 'Comprar el pastel',\n//     user: {\n//         _id: '123',\n//         name: 'Fernando'\n//     }\n// }\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n        case types.eventLoader:\n            return{\n                ...state,\n                events: [...action.payload]\n            }\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true\r\n}\r\n\r\nexport const authReducer = (state = initialState ,action) =>{\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        case types.authCheckingFinish:\r\n            return{ \r\n                ...state,\r\n                checking:false\r\n            }\r\n        case types.authLogout:\r\n            return{\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","\r\nimport { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","const baseUrl = process.env.REACT_APP_API_URL\r\n\r\nconst fetchsinToken = (endpoint,data,method = 'GET') =>{\r\n    const url = `${baseUrl}/${endpoint}`\r\n    if (method === 'GET') {\r\n        return fetch(url)\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endpoint,data,method = 'GET') =>{\r\n    const token = localStorage.getItem('token') || ''\r\n    const url = `${baseUrl}/${endpoint}`\r\n    if (method === 'GET') {\r\n        return fetch(url,{\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        })\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchsinToken,\r\n    fetchConToken\r\n}\r\n","import Swal from \"sweetalert2\"\r\nimport { fetchConToken, fetchsinToken } from \"../helpers/fetch\"\r\nimport {types} from '../types/types'\r\nexport const startLogin = (email,password) => {\r\n    \r\n    return async (dispatch) =>{\r\n        const resp = await fetchsinToken('auth',{email,password},'POST')\r\n        const body = await resp.json()\r\n        if (body.ok) {\r\n            localStorage.setItem('token',body.token)\r\n            localStorage.setItem('token-init-date',new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n\r\n        }else{\r\n            Swal.fire('Error',body.msg)\r\n        }\r\n    }\r\n}\r\nexport const startRegister =  (email, password,name) => {\r\n    return async (dispatch) =>{\r\n        const resp = await fetchsinToken('auth/new',{email,password,name},'POST')\r\n        const body = await resp.json()\r\n        if (body.ok) {\r\n            localStorage.setItem('token',body.token)\r\n            localStorage.setItem('token-init-date',new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n\r\n        }else{\r\n            Swal.fire('Error',body.msg)\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) =>{\r\n        const resp = await fetchConToken('auth/renew')\r\n        const body = await resp.json()\r\n        if (body.ok) {\r\n            localStorage.setItem('token',body.token)\r\n            localStorage.setItem('token-init-date',new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n\r\n        }else{\r\n            dispatch(checkingFinish())\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => {\r\n    return{\r\n        type: types.authCheckingFinish\r\n\r\n    }\r\n}\r\n\r\n\r\nconst login = (user) => {\r\n    return{\r\n        type: types.authLogin,\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return(dispatch) =>{\r\n        localStorage.clear()\r\n        dispatch(logout())\r\n\r\n\r\n    }\r\n}\r\nconst logout = () => {\r\n    return{\r\n        type: types.authLogout\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport './login.css';\nimport {useForm}  from '../../hooks/useForm'\nimport { useDispatch } from 'react-redux';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport Swal from 'sweetalert2';\nexport const LoginScreen = () => {\n    const dispatch = useDispatch()\n    const [ formLoginValues, handleLoginInputChange ] = useForm( {\n        lEmail: '',\n        lpassword: ''\n    });\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm( {\n        rName: '',\n        rEmail: '',\n        rpassword1: '',\n        rpassword2: ''\n    });\n    const {rName,rEmail,rpassword1,rpassword2} = formRegisterValues\n    const {lEmail,lpassword} = formLoginValues\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        dispatch(startLogin(lEmail,lpassword))\n    }\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n        if (rpassword1 !== rpassword2) {\n            return Swal.fire('Error',\"las password deben de ser iguales\")\n        }\n        dispatch(startRegister(rEmail,rpassword1,rName))\n    }\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form\n                        onSubmit={handleLogin}\n                    >\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={lEmail}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lpassword\"\n                                value={lpassword}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form\n                       onSubmit={handleRegister} \n                    >\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name='rName'\n                                value={rName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={rEmail}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name=\"rpassword1\"\n                                value={rpassword1}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"rpassword2\"\n                                value={rpassword2}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth'\n\nexport const Navbar = () => {\n    const dispatch = useDispatch()\n    const {name} = useSelector(state => state.auth)\n    const handleLogout = () => {\n        dispatch(startLogout())\n    }\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                {name}\n            </span>\n            \n            <button \n                onClick={handleLogout}\n            className=\"btn btn-outline-danger\">\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import moment from \"moment\"\r\n\r\nexport const prepareEventos = (events = []) => {\r\n    \r\n    return events.map(e=>({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start:moment(e.start).toDate()\r\n    }))\r\n}","import { types } from \"../types/types\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEventos } from \"../helpers/prepareEvents\";\nimport Swal from \"sweetalert2\";\nexport const eventStartAddNew = (event) => {\n\treturn async (dispatch, getState) => {\n\t\tconst { uid, name } = getState().auth;\n\t\ttry {\n\t\t\tconst resp = await fetchConToken(\"events\", event, \"POST\");\n\t\t\tconst body = await resp.json();\n\t\t\tif (body.ok) {\n\t\t\t\tevent.id = body.evento.id;\n\t\t\t\tevent.user = {\n\t\t\t\t\t_id: uid,\n\t\t\t\t\tname: name,\n\t\t\t\t};\n\t\t\t\tdispatch(eventAddNew(event));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\n\nconst eventAddNew = (event) => ({\n\ttype: types.eventAddNew,\n\tpayload: event,\n});\n\nexport const eventSetActive = (event) => ({\n\ttype: types.eventSetActive,\n\tpayload: event,\n});\n\nexport const eventClearActiveEvent = () => ({\n\ttype: types.eventClearActiveEvent,\n});\n\nexport const eventStartUpdate = (event) => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst resp = await fetchConToken(`events/${event.id}`, event, \"PUT\");\n\t\t\tconst body = await resp.json();\n\t\t\tif (body.ok) {\n\t\t\t\tdispatch(eventUpdated(event));\n\t\t\t} else {\n\t\t\t\tSwal.fire(\"Error\", body.msg, \"error\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\nconst eventUpdated = (event) => ({\n\ttype: types.eventUpdated,\n\tpayload: event,\n});\n\nexport const eventStartDelete = () => {\n    return async (dispatch,getState) =>{\n        const {id} = getState().calendar.activeEvent\n        \n        try {\n\t\t\tconst resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\n\t\t\tconst body = await resp.json();\n            console.log(body);\n\t\t\tif (body.ok) {\n\t\t\t\tdispatch(eventDeleted());\n\t\t\t} else {\n\t\t\t\tSwal.fire(\"Error\", body.msg, \"error\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n    }\n}\nconst eventDeleted = () => {\n    return{\n        type: types.eventDeleted\n    }\n}\n\n\nexport const eventStartLoading = () => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst resp = await fetchConToken(\"events\");\n\t\t\tconst body = await resp.json();\n\n\t\t\tconst events = prepareEventos(body.eventos);\n\n\t\t\tdispatch(eventLoaded(events));\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n};\nconst eventLoaded = (events) => {\n\treturn {\n\t\ttype: types.eventLoader,\n\t\tpayload: events,\n\t};\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport {eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n    \n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        // TODO: cerrar el modal\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n    \n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            dispatch( eventStartUpdate( formValues ) )\n        } else {\n            dispatch( eventStartAddNew(formValues) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n        \n    }\n\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { eventDeleted, eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n\n    useEffect(() => {\n        dispatch(eventStartLoading())\n        \n    }, [])\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector( state => state.calendar );\n\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n\n    const onDoubleClick = (e) => {\n        // console.log(e);\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive( e ) );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        // console.log(e)\n        dispatch( eventClearActiveEvent() );\n    }\n\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n        \n        const style = {\n            backgroundColor: '#367CF7',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            \n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n\n\n            <AddNewFab />\n\n\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n            \n\n            <CalendarModal />\n\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\n  \nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { startChecking } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector( state => state.auth);\n\n    useEffect(() => {\n        \n        dispatch( startChecking() );\n\n    }, [dispatch])\n\n    if ( checking ) {\n        return (<h5>Espere...</h5>);\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n\n                    <PublicRoute \n                        exact \n                        path=\"/login\" \n                        component={ LoginScreen }\n                        isAuthenticated={ !!uid }\n                    />\n\n                    <PrivateRoute \n                        exact \n                        path=\"/\" \n                        component={ CalendarScreen } \n                        isAuthenticated={ !!uid }\n                    />\n\n                    <Redirect to=\"/\" />   \n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}